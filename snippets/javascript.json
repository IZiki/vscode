{
	"JSFunction": {
		"prefix": "fn",
		"body": [
			"function $1($2){"
			"	$3"
			"}"
		],
		"description": "Javascript Function"
	},
	"JSIIFE": {
		"prefix": "iife",
		"body": [
			"(() => {"
			"  $1"
			"})();"
		],
		"description": "Javascript IIFE"
	},
	"JSConsole": {
		"prefix": "cs",
		"body": [
			"console.log($1)"
		],
		"description": "Javascript Console.log"
	},
	"JSConsoleE": {
		"prefix": "ce",
		"body": [
			"console.error($1)"
		],
		"description": "Javascript Console.log"
	},
	"JSUsestrict": {
		"prefix": "us",
		"body": [
			"'use strict';"
			""
		],
		"description": "Javascript use strict"
	},
	"NDexports": {
		"prefix": "ex",
		"body": [
			"module.exports = $1"
		],
		"description": "Node module exports"
	},
	"NDrequire": {
		"prefix": "rq",
		"body": [
			"require('$1');"
		],
		"description": "Node require modules"
	},
	"JQclear": {
		"prefix": "jqclear",
		"body": [
			"jQuery.noConflict();"
		],
		"description": ""
	},
	"JQready": {
		"prefix": "jqready",
		"body": [
			"jQuery(function($){"
			"	$1"
			"});"
		],
		"description": ""
	},
	"JQselect": {
		"prefix": "$",
		"body": [
			"$('$1')$2"
		],
		"description": ""
	},
	"JQajax": {
		"prefix": "jqajax",
		"body": [
			"$.ajax({"
			"	async:true,"
			"	url:$1,"
			"	type:'GET',"
			"	data:{'$2':$3},"
			"	dataType:'jsonp',"
			"	success:function (data){"
			"		if(data.result!=0){"
			"			console.error('接口数据异常',data.msg)"
			"			return"
			"		}"
			"	},"
			"	error:function (){"
			"		console.error('接口连接异常')"
			"	}"
			"})"
		],
		"description": ""
	},
	"JQplugin": {
		"prefix": "jqplugin",
		"body": [
			"$.fn.extend({"
			"	'foo':function(arg){"
			"		$1"
			"		return this;	//this即为操作的jq对象"	
			"	}"
			"})"
		],
		"description": ""
	},
	"rqjs": {
		"prefix": "rqjs",
		"body": [
			"requirejs(['lib/jquery'], function(){"
				"$1"
			"});"
		],
		"description": "requirejs"
	},
	"amd": {
		"prefix": "amd",
		"body": [
			"(function (root, factory) {"
			"	if (typeof exports === \"object\") {"
			"		module.exports = factory(root);"
			"	} else if (typeof define === \"function\" && define.amd) {"
			"		define([], factory(root));"
			"	} else {"
			"		root.LazyLoad = factory(root);"
			"	}"
			"})(typeof global !== \"undefined\" ? global : this.window || this.global, function (root) {"
			"	\"use strict\";"
			"	function foo(){"
			"		this.init();"
			"	}"
			"	foo.prototype = {"
			"		init : function(){},"
			"	}"
			"	root.foo = function(arg) {"
        	"		return new foo(arg);"
    		"	};"
			"	return foo"
			"})"
		],
		"description": ""
	}
}